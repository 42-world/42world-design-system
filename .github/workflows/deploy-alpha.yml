name: Deploy Alpha

on:
  pull_request:
    branches: [main]

  workflow_dispatch:

concurrency:
  group: 'pages-deploy'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      main_version: ${{ steps.version.outputs.main_version }}
      alpha_version: ${{ steps.version.outputs.alpha_version }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/version-setter
        id: version

  build:
    needs: version
    runs-on: ubuntu-latest
    env:
      main_version: ${{ needs.version.outputs.main_version }}
      alpha_version: ${{ needs.version.outputs.alpha_version }}
      new_version: ${{ needs.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: branch
      - name: Checkout Pages
        uses: actions/checkout@v2
        with:
          ref: pages
          path: pages

      - name: Reset Alpha Pages
        run: |
          rm -rf pages/$alpha_version
          mkdir -p pages/$alpha_version
          cp -rf pages/$main_version pages/$alpha_version || true

          bash .script/commit.sh "Reset Alpha $alpha_version"

      - name: Build Alpha Pages
        run: |
          cd branch
          yarn
          yarn build & yarn build-framer & yarn build-storybook
          yarn version --new_version $alpha_version --no-git-tag-version
          yarn pack
          cd $GITHUB_WORKSPACE

          rm -rf pages/$alpha_version
          mkdir -p pages/$alpha_version
          cp -rf branch/framer pages/$alpha_version/framer
          cp -rf branch/dist pages/$alpha_version/dist
          cp -rf branch/storybook pages/$alpha_version/storybook
          cp -rf branch/*.tgz pages/$alpha_version

          bash .script/commit.sh "Updated Alpha $alpha_version"

      - name: Comment a pull_request
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments \
            -d "{\"body\": \"Alpha $alpha_version Build Done!\n New Version: $new_version\"}"
