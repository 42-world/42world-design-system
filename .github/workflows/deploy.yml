name: Deploy

on:
  push:
    branches: [main]

  workflow_dispatch:

concurrency:
  group: 'pages-deploy'

jobs:
  new-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get New Version
        id: version
        run: |
          title=$(git log -1 --pretty=%B)  # get the last commit message
          option=$(bash .script/version-up-option.sh $title)
          yarn version $option --no-git-tag-version
          new_version=$(yarn --silent run version)
          echo $new_version

  build:
    needs: new-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          path: main
      - name: Checkout Pages
        uses: actions/checkout@v2
        with:
          ref: pages
          path: pages

      - name: Set Version Variables
        run: |
          MAIN_VERSION=$(cd $GITHUB_WORKSPACE/branch && yarn --silent run version)
          echo "main_version=$MAIN_VERSION" >> $GITHUB_ENV

      - name: Generate Pages
        env:
          main_version: ${{ env.main_version}}
        run: |
          cd branch
          yarn
          yarn build & yarn build-framer & yarn build-storybook
          yarn version --new-version $alpha_version
          yarn pack
          cd $GITHUB_WORKSPACE

      - name: Commit & Push
        run: |
          cd main
          VERSION=$(yarn --silent run version)
          cd ../pages
          git config --global user.name 'deploy'
          git config --global user.email 'deploy@users.noreply.github.com'
          git add .
          bash $GITHUB_WORKSPACE/main/.script/get-build-complete-message.sh $VERSION > $GITHUB_WORKSPACE/comment.txt
          git status
          git commit -m "Updated Main" | cat
          git pull
          git push

      - name: Comment a pull_request
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
          main_version: ${{ env.main_version}}
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/$REPO/commits/$GITHUB_SHA/comments \
            -d "{\"body\": \"$(cat $GITHUB_WORKSPACE/comment.txt)\"}"
