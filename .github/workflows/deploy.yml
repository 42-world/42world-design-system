name: Deploy

on:
  push:
    branches: [main]

  workflow_dispatch:

concurrency:
  group: 'pages-deploy'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Version
        id: version
        shell: bash
        run: |
          semver=$(bash .script/get-version-semver.sh '${{ github.event.head_commit.message }}')
          yarn version $semver --no-git-tag-version
          NEW_VERSION=$(yarn --silent run version)
          echo "new_version=$NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-latest
    env:
      new_version: ${{ needs.setup.outputs.new_version }}
      base_path: 'design'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Checkout Pages Repo
        uses: actions/checkout@v3
        with:
          repository: '42-world/42-world.github.io'
          path: .pages
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Build Pages
        id: build
        run: |
          yarn
          NODE_ENV=production yarn build
          yarn version --new-version $new_version --no-git-tag-version
          yarn pack

          rm -rf .pages/$base_path/$new_version
          mkdir -p .pages/$base_path/$new_version
          cp -rf dist/* .pages/$base_path/$new_version
          cp -rf *.tgz .pages/$base_path/$new_version

          rm -rf .pages/$base_path/latest
          mkdir -p .pages/$base_path/latest
          cp -rf .pages/$base_path/$new_version/* .pages/$base_path/latest

          echo "pack_name=$(ls *.tgz)" >> $GITHUB_OUTPUT
          rm -rf *.tgz

      - name: Commit New Version
        id: commit-new-version
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: '[skip actions] v${{ env.new_version }} updated'
          push_options: '--force'

      - name: Deploy Pages
        id: deploy
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Version ${{ env.new_version }} Build (${{ github.sha }})'
          commit_options: '--allow-empty'
          repository: .pages
          branch: main

      - uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Fetch Build Status Url
        id: fetch-build-status
        run: |
          url=$(bash .script/fetch-deploy-url.sh '${{ steps.deploy.outputs.commit_hash }}')
          echo "url=$url"
          echo "url=$url" >> $GITHUB_OUTPUT

      - name: Comment commit
        uses: peter-evans/commit-comment@v2
        with:
          sha: ${{ steps.commit-new-version.outputs.commit_hash }}
          body: |
            ## Version ${{ env.new_version }}

            _check the deploy [here](${{ steps.fetch-build-status.outputs.url }})_

            ### Check it out!

            - Go to [StoryBook](https://42-world.github.io/${{ env.base_path }}/${{ env.new_version }}/storybook)
            - Go to [Framer](https://42-world.github.io/${{ env.base_path }}/utils/framer_code_gen.html?base_path=${{ env.base_path }}&version=${{ env.new_version }})

            ### Or you can try...

            ```
            yarn add @42world/design-core@^${{ env.new_version }}
            ```

            or

            ```
            yarn add @42world/design-core@https://42-world.github.io/${{ env.base_path }}/${{ env.new_version }}/${{ steps.build.outputs.pack_name }}
            ```
